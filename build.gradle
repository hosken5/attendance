buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE')
    }
}


apply plugin: 'java'
sourceCompatibility=1.8
targetCompatibility=1.8
apply plugin: 'spring-boot'
apply plugin: 'idea'

configurations {
    mybatisGenerator
}


bootRepackage {
    mainClass = 'com.yimei.attendance.Application'
}

springBoot {
    mainClass = 'com.yimei.attendance.Application'
}

bootRun {
    addResources = false
}


if (project.hasProperty('prod')) {
    apply from: 'profile_prod.gradle'
}else{
    apply from: 'profile_dev.gradle'
}


description = ''

configurations {
    providedRuntime
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {

    compile(group: 'com.zaxxer', name: 'HikariCP',version:'2.3.7') {
        exclude(module: 'tools')
    }
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'commons-io', name: 'commons-io', version: '2.4'
    compile group: 'org.hibernate', name: 'hibernate-validator',version:'5.2.2.Final'
    compile group: 'org.springframework', name:'spring-jdbc',version:'4.1.7.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-actuator'
    compile group: 'org.springframework.boot', name: 'spring-boot-autoconfigure'
    compile group: 'org.springframework.boot', name: 'spring-boot-loader-tools'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-logging'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile(group: 'org.springframework', name: 'spring-context-support') {
        exclude(module: 'quartz')
    }
    //mybatis
    compile group:'org.mybatis', name:'mybatis', version:'3.3.0'
    compile group:'org.mybatis', name:'mybatis-spring', version:'1.2.2'
    compile group: 'mysql', name: 'mysql-connector-java',version:'5.1.34'

    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.2'
    mybatisGenerator 'mysql:mysql-connector-java:5.1.34'


    compile group: 'com.googlecode.log4jdbc', name: 'log4jdbc', version: '1.2'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-jetty'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.2.0'
    testCompile group: 'junit', name: 'junit',version:'4.12'
    testCompile group: 'org.mockito', name: 'mockito-core',version:'1.10.19'

}

task mybatisGenerate << {
    ext.destDir = new File(buildDir, 'mybatisGenerate')
    destDir.mkdirs()
    ant.properties['targetProject'] = destDir.path
    ant.taskdef (
            name: 'mbgenerator',
            classname: 'org.mybatis.generator.ant.GeneratorAntTask',
            classpath: configurations.mybatisGenerator.asPath
    )
    ant.mbgenerator (overwrite: true,
            configfile: 'src/main/resources/generatorConfig.xml',verbose: true){
        propertyset {
            propertyref(name: 'targetProject')
        }
    }
}
task wrapper(type: Wrapper) {
    gradleVersion = '2.5'
}

task stage(dependsOn: 'bootRepackage') {
}
